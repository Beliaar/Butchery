/**
 * Copyright (c) Beliar, 2012
 * https://github.com/Beliaar/Butchery
 *
 * Butchery is distributed under the terms of the Minecraft Mod Public
 * License 1.0, or MMPL. Please check the contents of the license located in
 * https://github.com/Beliaar/Butchery/wiki/License
 */

// Template version 1.1
// Original Java generated by Techne

package butchery.client;

import butchery.common.blocks.TileEntityTub;
import net.minecraft.client.Minecraft;
import net.minecraft.src.Entity;
import net.minecraft.src.ModelBase;
import net.minecraft.src.ModelRenderer;
import net.minecraft.src.Tessellator;

/**
 * The model for the tub
 * 
 * @author Beliar
 * 
 */
public class ModelTub extends ModelBase {
	// fields
	ModelRenderer Bottom;
	ModelRenderer Right;
	ModelRenderer Left;
	ModelRenderer Back;
	ModelRenderer Front;
	ModelRenderer Water;

	public ModelTub() {
		textureWidth = 128;
		textureHeight = 64;

		Bottom = new ModelRenderer(this, 0, 0);
		Bottom.addBox(0F, 0F, 0F, 12, 1, 12);
		Bottom.setRotationPoint(10F, 5F, 9F);
		Bottom.setTextureSize(128, 64);
		Bottom.mirror = true;
		setRotation(Bottom, 0F, 0F, 0F);
		Right = new ModelRenderer(this, 0, 18);
		Right.addBox(0F, 0F, 0F, 16, 12, 2);
		Right.setRotationPoint(8F, 5F, 21F);
		Right.setTextureSize(128, 64);
		Right.mirror = true;
		setRotation(Right, 0F, 0F, 0F);
		Left = new ModelRenderer(this, 0, 36);
		Left.addBox(0F, 0F, 0F, 16, 12, 2);
		Left.setRotationPoint(8F, 5F, 7F);
		Left.setTextureSize(128, 64);
		Left.mirror = true;
		setRotation(Left, 0F, 0F, 0F);
		Back = new ModelRenderer(this, 39, 18);
		Back.addBox(0F, 0F, 0F, 2, 12, 12);
		Back.setRotationPoint(22F, 5F, 9F);
		Back.setTextureSize(128, 64);
		Back.mirror = true;
		setRotation(Back, 0F, 0F, 0F);
		Front = new ModelRenderer(this, 71, 18);
		Front.addBox(0F, 0F, 0F, 2, 12, 12);
		Front.setRotationPoint(8F, 5F, 9F);
		Front.setTextureSize(128, 64);
		Front.mirror = true;
		setRotation(Front, 0F, 0F, 0F);
		Water = new ModelRenderer(this, 49, 47);
		Water.addBox(0F, 0F, 0F, 12, 1, 12);
		Water.setTextureSize(128, 64);
		Water.mirror = false;
	}

	@Override
	public void render(Entity entity, float f, float f1, float f2, float f3,
			float f4, float f5) {
		super.render(entity, f, f1, f2, f3, f4, f5);
		setRotationAngles(f, f1, f2, f3, f4, f5);
		Bottom.render(f5);
		Right.render(f5);
		Left.render(f5);
		Back.render(f5);
		Front.render(f5);
	}

	public void renderModel(float scale) {
		Bottom.render(scale);
		Right.render(scale);
		Left.render(scale);
		Back.render(scale);
		Front.render(scale);
	}

	/**
	 * Render the water based on the water level of the entity
	 */
	public void renderWater(TileEntityTub entity, float scale, double x,
			double y, double z) {
		if (entity.waterLevel > 0) {
			Water.setRotationPoint(10F, 6.0F + (entity.waterLevel / 10F), 9F);
			Water.render(scale);
		}

	}

	private void setRotation(ModelRenderer model, float x, float y, float z) {
		model.rotateAngleX = x;
		model.rotateAngleY = y;
		model.rotateAngleZ = z;
	}

	@Override
	public void setRotationAngles(float f, float f1, float f2, float f3,
			float f4, float f5) {
		super.setRotationAngles(f, f1, f2, f3, f4, f5);
	}

}
